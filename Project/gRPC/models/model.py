# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-05-10T10:42:35+00:00

from __future__ import annotations

from datetime import date, datetime, time
from typing import List, Optional

from pydantic import BaseModel, Field, conint


class DataOfUserRequest(BaseModel):
    user_id: int = Field(..., example=123)
    name_pills: str = Field(..., example='Аспирин')
    limitation_days: Optional[conint(ge=0)] = Field(..., example=7)
    number_iters: conint(ge=1) = Field(..., example=2)


class UserReturnScheduleData(BaseModel):
    name_medication: Optional[str] = Field(None, example='Аспирин')
    first_day: Optional[date] = Field(None, example='2025-01-01')
    last_day: Optional[date] = Field(None, example='2025-01-10')
    daily_schedule: Optional[List[time]] = Field(None, example=['08:00', '20:00'])


class ReturnUserActualSchedule(BaseModel):
    name_medication: Optional[str] = Field(None, example='Аспирин')
    next_taking_time: Optional[datetime] = Field(None, example='2023-01-01T08:00:00Z')


class ErrorResponse(BaseModel):
    error: Optional[str] = Field(None, example='Invalid request data')
    details: Optional[str] = Field(None, example='User ID must be positive integer')

